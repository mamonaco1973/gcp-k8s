# =============================================================
# Deployment: flask-app (Python Web App on Port 8000)
# =============================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app

spec:
  replicas: 2  # Number of replicas to run

  selector:
    matchLabels:
      app: flask-app  # Selector matches the pod label

  template:
    metadata:
      labels:
        app: flask-app  # Label applied to each pod

    spec:
      serviceAccountName: firestore-access-sa  # GKE service account for Workload Identity

      containers:
        - name: flask-app
          image: us-central1-docker.pkg.dev/$project_id/flask-repository/flask-app:flask-app-rc1

          ports:
            - containerPort: 8000  # Flask app listens on port 8000

          livenessProbe:
            httpGet:
              path: /gtg
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /gtg
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

---

# =============================================================
# Service: flask-app-service (Internal, NGINX will expose it)
# =============================================================
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service

spec:
  selector:
    app: flask-app  # Targets pods with this label

  ports:
    - protocol: TCP
      port: 80         # Exposes port 80 inside the cluster
      targetPort: 8000 # Redirects to container port 8000

  type: ClusterIP  # Internal-only service used by Ingress

---

# =============================================================
# Horizontal Pod Autoscaler: flask-app-hpa
# =============================================================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flask-app-hpa

spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flask-app

  minReplicas: 2  # Minimum number of pods to maintain
  maxReplicas: 5  # Maximum pods to scale up to

  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60  # Target 60% CPU usage before scaling

---

# =============================================================
# Ingress: flask-app-ingress (NGINX exposes this app externally)
# =============================================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /flask-app/api/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: flask-app-service
                port:
                  number: 80

